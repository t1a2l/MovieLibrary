{"version":3,"sources":["actions/projectActions.js","components/movie.js","components/movieLibrary.js","components/modal.js","App.js","store/reducers/projectReducer.js","index.js"],"names":["modalToggle","display","movieId","dispatch","type","inputChange","id","value","movie","editMovie","_this","props","deleteMovie","toggleDialog","modalMovieId","dialogDisplay","imageError","_this2","this","movieObj","movies","find","item","imdbID","react_default","a","createElement","Modal","show","onHide","bind","Header","Title","Body","Footer","Button","onClick","bsStyle","className","style","width","borderWidth","borderStyle","borderRadius","padding","margin","backgroundColor","onError","alt","src","Poster","height","objectFit","ListGroup","ListGroupItem","overflow","textOverflow","whiteSpace","Year","Runtime","Genre","Director","color","Component","connect","state","modalDisplay","movieLibrary","pageScrolling","window","innerHeight","scrollY","document","body","offsetHeight","changePage","page","getMovies","search","addEventListener","updateMoviesSearch","updateMoviesList","forEach","getMovieData","justifyContent","alignItems","flexWrap","map","components_movie","key","axios","get","concat","then","result","newMovies","data","Error","Search","listUpdated","res","modal","handleChange","e","target","saveChanges","format","modalEditMovie","found","error","test","isNaN","Date","parse","modalClose","Alert","modalError","Form","FormGroup","ControlLabel","FormControl","onChange","App","searchMovie","flexDirection","borderBottom","marginTop","fontSize","marginLeft","components_movieLibrary","components_modal","searchText","initState","searchTimeout","newMovieIndex","projectReducer","arguments","length","undefined","action","Object","toConsumableArray","newMovie","movieTitle","replace","toLowerCase","split","s","charAt","toUpperCase","substring","join","foundIndex","findIndex","exisitingMovie","push","objectSpread","i","assign","splice","modalObj","match","Number","defineProperty","index","editMovies","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.b9377a75.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getMovies = (search, page) => {\r\n  return dispatch => {\r\n    return axios\r\n      .get(`https://www.omdbapi.com/?s=${search}&page=${page}&apikey=382c69b0`)\r\n      .then(result => {\r\n        let newMovies;\r\n        if (result.data.Error) {\r\n          newMovies = [];\r\n        } else {\r\n          newMovies = result.data.Search;\r\n        }\r\n        dispatch({\r\n          type: \"FETCH_MOVIES\",\r\n          movies: newMovies,\r\n          listUpdated: true,\r\n          search: search\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getMovieData = movieId => {\r\n  return dispatch => {\r\n    axios\r\n      .get(`https://www.omdbapi.com/?i=${movieId}&apikey=382c69b0`)\r\n      .then(res => res.data)\r\n      .then(res => {\r\n        let movieObj = {\r\n          Runtime: res.Runtime,\r\n          Genre: res.Genre,\r\n          Director: res.Director,\r\n          Poster: res.Poster\r\n        };\r\n        dispatch({\r\n          type: \"FETCH_MOVIE_DATA\",\r\n          movieObj: movieObj,\r\n          movieId: movieId\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const changePage = page => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"CHANGE_PAGE\",\r\n      page: page\r\n    });\r\n  };\r\n};\r\n\r\nexport const modalToggle = (display, movieId) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"MODAL_TOGGLE\",\r\n      display: display,\r\n      movieId: movieId\r\n    });\r\n  };\r\n};\r\n\r\nexport const toggleDialog = (display, movieId) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"TOGGLE_DIALOG\",\r\n      display: display,\r\n      movieId: movieId\r\n    });\r\n  };\r\n};\r\n\r\nexport const inputChange = (id, value) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      id: id,\r\n      value: value\r\n    });\r\n  };\r\n};\r\n\r\nexport const saveChanges = error => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SAVE_CHANGES\",\r\n      error: error\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteMovie = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"DELETE_MOVIE\",\r\n      id: id\r\n    });\r\n  };\r\n};\r\n\r\nexport const searchMovie = value => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"SEARCH_MOVIE\",\r\n      value: value\r\n    });\r\n  };\r\n};\r\n\r\nexport const imageError = id => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: \"IMAGE_ERROR\",\r\n      id: id\r\n    });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ListGroup, ListGroupItem, Button, Modal } from \"react-bootstrap\";\r\nimport {\r\n  modalToggle,\r\n  deleteMovie,\r\n  toggleDialog,\r\n  imageError\r\n} from \"../actions/projectActions\";\r\n\r\nclass movie extends Component {\r\n  editMovie = () => {\r\n    this.props.modalToggle(true, this.props.movieId);\r\n  };\r\n\r\n  deleteMovie = () => {\r\n    this.toggleDialog();\r\n    this.props.deleteMovie(this.props.modalMovieId);\r\n  };\r\n\r\n  toggleDialog = () => {\r\n    this.props.toggleDialog(this.props.dialogDisplay, this.props.movieId);\r\n  };\r\n\r\n  imageError = () => {\r\n    this.props.imageError(this.props.movieId);\r\n  };\r\n\r\n  render() {\r\n    let movieObj = this.props.movies.find(\r\n      item => item.imdbID === this.props.movieId\r\n    );\r\n    return (\r\n      <div>\r\n        <Modal\r\n          show={this.props.dialogDisplay}\r\n          onHide={this.toggleDialog.bind(this)}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>Delete Movie</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Are you sure you want to delete this movie</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.toggleDialog.bind(this)}>Cancel</Button>\r\n            <Button bsStyle=\"primary\" onClick={this.deleteMovie.bind(this)}>\r\n              OK\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        <div\r\n          className=\"myMovie\"\r\n          style={{\r\n            width: \"300px\",\r\n            borderWidth: \"1px\",\r\n            borderStyle: \"solid\",\r\n            borderRadius: \"5px\",\r\n            padding: \"10px\",\r\n            margin: \"10px\",\r\n            backgroundColor: \"#263c70\"\r\n          }}\r\n        >\r\n          <img\r\n            className=\"image-root\"\r\n            onError={this.imageError.bind(this)}\r\n            alt=\"Movie\"\r\n            src={movieObj.Poster}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"300px\",\r\n              objectFit: \"cover\",\r\n              borderWidth: \"1px\",\r\n              borderStyle: \"solid\"\r\n            }}\r\n          />\r\n          <div className=\"movieData\">\r\n            <ListGroup>\r\n              <ListGroupItem\r\n                style={{\r\n                  height: \"40px\",\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\",\r\n                  whiteSpace: \"nowrap\",\r\n                  backgroundColor: \"#F0FFFF\"\r\n                }}\r\n              >\r\n                {movieObj.imdbID}\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  height: \"40px\",\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\",\r\n                  whiteSpace: \"nowrap\",\r\n                  backgroundColor: \"#F0FFFF\"\r\n                }}\r\n              >\r\n                {movieObj.Title}\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  height: \"40px\",\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\",\r\n                  whiteSpace: \"nowrap\",\r\n                  backgroundColor: \"#F0FFFF\"\r\n                }}\r\n              >\r\n                {movieObj.Year}\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  height: \"40px\",\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\",\r\n                  whiteSpace: \"nowrap\",\r\n                  backgroundColor: \"#F0FFFF\"\r\n                }}\r\n              >\r\n                {movieObj.Runtime}\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  height: \"40px\",\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\",\r\n                  whiteSpace: \"nowrap\",\r\n                  backgroundColor: \"#F0FFFF\"\r\n                }}\r\n              >\r\n                {movieObj.Genre}\r\n              </ListGroupItem>\r\n              <ListGroupItem\r\n                style={{\r\n                  height: \"40px\",\r\n                  overflow: \"hidden\",\r\n                  textOverflow: \"ellipsis\",\r\n                  whiteSpace: \"nowrap\",\r\n                  backgroundColor: \"#F0FFFF\"\r\n                }}\r\n              >\r\n                {movieObj.Director}\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            <Button\r\n              bsStyle=\"info\"\r\n              onClick={this.editMovie.bind(this)}\r\n              style={{ color: \"#0f1113\" }}\r\n            >\r\n              Edit\r\n            </Button>\r\n            &nbsp;\r\n            <Button\r\n              bsStyle=\"warning\"\r\n              onClick={this.toggleDialog.bind(this)}\r\n              style={{ color: \"#0f1113\" }}\r\n            >\r\n              Delete\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    movies: state.movies,\r\n    modalDisplay: state.modalDisplay,\r\n    dialogDisplay: state.dialogDisplay,\r\n    modalMovieId: state.modalMovieId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    modalToggle: (display, movieId) => {\r\n      dispatch(modalToggle(display, movieId));\r\n    },\r\n    deleteMovie: movieId => {\r\n      dispatch(deleteMovie(movieId));\r\n    },\r\n    toggleDialog: (display, movieId) => {\r\n      dispatch(toggleDialog(display, movieId));\r\n    },\r\n    imageError: movieId => {\r\n      dispatch(imageError(movieId));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(movie);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getMovies, getMovieData, changePage } from \"../actions/projectActions\";\r\nimport Movie from \"./movie\";\r\n\r\nclass movieLibrary extends Component {\r\n  componentWillMount() {\r\n    this.props.getMovies(this.props.search, this.props.page);\r\n    document.addEventListener(\"scroll\", this.pageScrolling.bind(this));\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.updateMoviesSearch) {\r\n      let page = 1;\r\n      this.props.getMovies(this.props.search, page);\r\n    } else if (this.props.updateMoviesList) {\r\n      this.props.movies.forEach(item => {\r\n        this.props.getMovieData(item.imdbID);\r\n      });\r\n    }\r\n  }\r\n\r\n  pageScrolling = () => {\r\n    if (\r\n      window.innerHeight + window.scrollY >=\r\n      document.body.offsetHeight - 20\r\n    ) {\r\n      this.props.changePage(this.props.page);\r\n      this.props.getMovies(this.props.search, this.props.page);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"movieCatalog\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-evenly\",\r\n          alignItems: \"center\",\r\n          flexWrap: \"wrap\"\r\n        }}\r\n      >\r\n        {this.props.movies.map(item => {\r\n          return <Movie key={item.imdbID} movieId={item.imdbID} />;\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    page: state.page,\r\n    movies: state.movies,\r\n    updateMoviesSearch: state.updateMoviesSearch,\r\n    updateMoviesList: state.updateMoviesList,\r\n    search: state.search\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getMovies: (search, page) => {\r\n      dispatch(getMovies(search, page));\r\n    },\r\n    getMovieData: movieId => {\r\n      dispatch(getMovieData(movieId));\r\n    },\r\n    changePage: page => {\r\n      dispatch(changePage(page));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(movieLibrary);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Modal,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  Alert,\r\n  ControlLabel,\r\n  FormGroup\r\n} from \"react-bootstrap\";\r\nimport {\r\n  modalToggle,\r\n  inputChange,\r\n  saveChanges\r\n} from \"../actions/projectActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass modal extends Component {\r\n  handleChange = e => {\r\n    let target = e.target;\r\n    this.props.inputChange(target.id, target.value);\r\n  };\r\n\r\n  saveChanges = () => {\r\n    let format = /[!@#$%^&*()_+\\-=\\]{};':\"\\\\|.<>?]/;\r\n    let movieObj = this.props.modalEditMovie;\r\n    let found = this.props.movies.find(\r\n      item => item.Title === movieObj.Title && item.imdbID !== movieObj.imdbID\r\n    );\r\n    let error = \"\";\r\n    if (found) {\r\n      error = \"Title already exists\";\r\n    } else if (movieObj.Title === \"\" || format.test(movieObj.Title) || found) {\r\n      error =\r\n        \"Title could not be empty and should include alpha numeric charecters\";\r\n    } else if (movieObj.Year === \"\" || isNaN(Date.parse(movieObj.Year))) {\r\n      error = \"Please enter a valid year e.g 2014\";\r\n    } else if (movieObj.Runtime === \"\" || isNaN(movieObj.Runtime)) {\r\n      error = \"Runtime should contain only numbers\";\r\n    } else if (movieObj.Genre === \"\" || format.test(movieObj.Genre)) {\r\n      error = \"Genre should be a list of words seperated by comma\";\r\n    } else if (movieObj.Director === \"\" || format.test(movieObj.Director)) {\r\n      error = \"Director could not be empty and should include director name\";\r\n    }\r\n    this.props.saveChanges(error);\r\n  };\r\n\r\n  modalClose = () => {\r\n    this.props.modalToggle(false, null);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"myModal\">\r\n        <Modal\r\n          show={this.props.modalDisplay}\r\n          onHide={this.modalClose.bind(this)}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              Movie details - {this.props.modalEditMovie.imdbID}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Alert\r\n              bsStyle=\"warning\"\r\n              className={this.props.modalError ? \"\" : \"hidden\"}\r\n            >\r\n              <h4>Error!</h4>\r\n              <p>{this.props.modalError}</p>\r\n            </Alert>\r\n            <Form>\r\n              <FormGroup>\r\n                <ControlLabel>Title</ControlLabel>\r\n                <FormControl\r\n                  id=\"Title\"\r\n                  type=\"text\"\r\n                  value={this.props.modalEditMovie.Title}\r\n                  onChange={this.handleChange.bind(this)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel>Year</ControlLabel>\r\n                <FormControl\r\n                  id=\"Year\"\r\n                  type=\"text\"\r\n                  value={this.props.modalEditMovie.Year}\r\n                  onChange={this.handleChange.bind(this)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel>Runtime</ControlLabel>\r\n                <FormControl\r\n                  id=\"Runtime\"\r\n                  type=\"text\"\r\n                  value={this.props.modalEditMovie.Runtime}\r\n                  onChange={this.handleChange.bind(this)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel>Genre</ControlLabel>\r\n                <FormControl\r\n                  id=\"Genre\"\r\n                  type=\"text\"\r\n                  value={this.props.modalEditMovie.Genre}\r\n                  onChange={this.handleChange.bind(this)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <ControlLabel>Director</ControlLabel>\r\n                <FormControl\r\n                  id=\"Director\"\r\n                  type=\"text\"\r\n                  value={this.props.modalEditMovie.Director}\r\n                  onChange={this.handleChange.bind(this)}\r\n                />\r\n              </FormGroup>\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={this.saveChanges.bind(this)} bsStyle=\"primary\">\r\n              Save\r\n            </Button>\r\n            <Button onClick={this.modalClose.bind(this)}>Cancel</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    movies: state.movies,\r\n    modalDisplay: state.modalDisplay,\r\n    modalMovieId: state.modalMovieId,\r\n    modalEditMovie: state.modalEditMovie,\r\n    modalError: state.modalError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    modalToggle: (display, movieId) => {\r\n      dispatch(modalToggle(display, movieId));\r\n    },\r\n    inputChange: (id, value) => {\r\n      dispatch(inputChange(id, value));\r\n    },\r\n    saveChanges: error => {\r\n      dispatch(saveChanges(error));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(modal);\r\n","import React, { Component } from \"react\";\nimport MovieLibrary from \"./components/movieLibrary\";\nimport Modal from \"./components/modal\";\nimport { connect } from \"react-redux\";\nimport {\n  searchMovie,\n  modalToggle,\n  inputChange\n} from \"./actions/projectActions\";\nimport { FormControl, Button } from \"react-bootstrap\";\n\nclass App extends Component {\n  handleChange = e => {\n    let target = e.target;\n    this.props.inputChange(target.id, target.value);\n  };\n\n  searchMovie = () => {\n    if (this.props.search !== \"\") {\n      this.props.searchMovie(this.props.search);\n    }\n  };\n\n  editMovie = () => {\n    this.props.modalToggle(true, \"\");\n  };\n\n  render() {\n    return (\n      <div\n        className=\"App container-fluid\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          backgroundColor: \"#171717\"\n        }}\n      >\n        <div\n          className=\"app-header\"\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            borderBottom: \"6px solid #7FFFD4\",\n            flexWrap: \"wrap\"\n          }}\n        >\n          <h2 style={{ color: \"#FFF\", marginTop: \"10px\" }}>Movie Library</h2>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-around\"\n            }}\n          >\n            <FormControl\n              className=\"searchMovieStyle\"\n              onChange={this.handleChange.bind(this)}\n              value={this.props.search}\n              style={{\n                marginTop: \"8px\",\n                fontSize: \"18px\"\n              }}\n            />\n            <Button\n              bsStyle=\"primary\"\n              onClick={this.searchMovie.bind(this)}\n              style={{\n                marginTop: \"8px\",\n                marginLeft: \"20px\",\n                fontSize: \"18px\"\n              }}\n            >\n              Search\n            </Button>\n          </div>\n          <Button\n            bsStyle=\"primary\"\n            onClick={this.editMovie.bind(this)}\n            style={{\n              marginTop: \"8px\",\n              fontSize: \"18px\"\n            }}\n          >\n            Add new movie\n          </Button>\n        </div>\n        <MovieLibrary />\n        <Modal />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    search: state.search\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    searchMovie: searchText => {\n      dispatch(searchMovie(searchText));\n    },\n    modalToggle: (display, movieId) => {\n      dispatch(modalToggle(display, movieId));\n    },\n    inputChange: (id, value) => {\n      dispatch(inputChange(id, value));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","const initState = {\r\n  page: 1,\r\n  movies: [],\r\n  updateMoviesSearch: true,\r\n  updateMoviesList: false,\r\n  modalDisplay: false,\r\n  dialogDisplay: false,\r\n  modalMovieId: null,\r\n  modalEditMovie: {\r\n    imdbID: \"\",\r\n    Title: \"\",\r\n    Year: \"\",\r\n    Runtime: \"\",\r\n    Genre: \"\",\r\n    Director: \"\",\r\n    Poster: \"\"\r\n  },\r\n  modalError: \"\",\r\n  search: \"new-york\",\r\n  searchTimeout: \"\",\r\n  newMovieIndex: 0\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  if (action.type === \"FETCH_MOVIES\") {\r\n    let movies = [...state.movies];\r\n\r\n    action.movies.forEach(newMovie => {\r\n      newMovie.Title = fixTitle(newMovie.Title);\r\n      let foundIndex = movies.findIndex(\r\n        exisitingMovie => newMovie.imdbID === exisitingMovie.imdbID\r\n      );\r\n      if (foundIndex !== -1) {\r\n        movies[foundIndex] = newMovie;\r\n      } else {\r\n        movies.push(newMovie);\r\n      }\r\n    });\r\n    function fixTitle(movieTitle) {\r\n      movieTitle = movieTitle.replace(/[^a-zA-Z0-9 ]/g, \"\");\r\n      movieTitle\r\n        .toLowerCase()\r\n        .split(\" \")\r\n        .map(s => s.charAt(0).toUpperCase() + s.substring(1))\r\n        .join(\" \");\r\n      return movieTitle;\r\n    }\r\n    return {\r\n      ...state,\r\n      movies: movies,\r\n      updateMoviesSearch: false,\r\n      updateMoviesList: action.listUpdated,\r\n      search: action.search\r\n    };\r\n  } else if (action.type === \"FETCH_MOVIE_DATA\") {\r\n    let i = state.movies.findIndex(item => item.imdbID === action.movieId);\r\n    let movieObj = Object.assign({}, state.movies[i], action.movieObj);\r\n    let newMovies = [...state.movies];\r\n    newMovies.splice(i, 1, movieObj);\r\n    return {\r\n      ...state,\r\n      movies: newMovies,\r\n      updateMoviesList: false\r\n    };\r\n  } else if (action.type === \"CHANGE_PAGE\") {\r\n    let page = action.page + 1;\r\n    return {\r\n      ...state,\r\n      page: page\r\n    };\r\n  } else if (action.type === \"MODAL_TOGGLE\") {\r\n    let i = state.movies.findIndex(item => item.imdbID === action.movieId);\r\n    let movieObj = state.movies[i];\r\n    let modalObj = { ...state.modalEditMovie };\r\n    let error = state.modalError;\r\n    if (action.movieId && action.movieId !== \"\") {\r\n      modalObj = {\r\n        imdbID: movieObj.imdbID,\r\n        Title: movieObj.Title,\r\n        Year: movieObj.Year,\r\n        Runtime: movieObj.Runtime.match(/\\d+/g).map(Number)[0],\r\n        Genre: movieObj.Genre,\r\n        Director: movieObj.Director,\r\n        Poster: movieObj.Poster\r\n      };\r\n    } else if (action.movieId === \"\") {\r\n      modalObj = {\r\n        imdbID: \"new-movie-\" + state.newMovieIndex,\r\n        Title: \"\",\r\n        Year: \"\",\r\n        Runtime: \"\",\r\n        Genre: \"\",\r\n        Director: \"\",\r\n        Poster: \"\"\r\n      };\r\n    } else {\r\n      error = \"\";\r\n      modalObj = {\r\n        imdbID: \"\",\r\n        Title: \"\",\r\n        Year: \"\",\r\n        Runtime: \"\",\r\n        Genre: \"\",\r\n        Director: \"\",\r\n        Poster: \"\"\r\n      };\r\n    }\r\n    return {\r\n      ...state,\r\n      modalError: error,\r\n      modalDisplay: action.display,\r\n      modalMovieId: action.movieId,\r\n      modalEditMovie: modalObj\r\n    };\r\n  } else if (action.type === \"INPUT_CHANGE\") {\r\n    if (action.id !== \"\") {\r\n      let movieObj = { ...state.modalEditMovie, [action.id]: action.value };\r\n      return {\r\n        ...state,\r\n        modalEditMovie: movieObj\r\n      };\r\n    } else {\r\n      return {\r\n        ...state,\r\n        search: action.value\r\n      };\r\n    }\r\n  } else if (action.type === \"SAVE_CHANGES\") {\r\n    if (action.error === \"\") {\r\n      let movieObj = { ...state.modalEditMovie };\r\n      let index = state.newMovieIndex;\r\n      movieObj.Runtime = movieObj.Runtime + \" min\";\r\n      let i = state.movies.findIndex(item => item.imdbID === movieObj.imdbID);\r\n      let editMovies = [...state.movies];\r\n      if (i !== -1) {\r\n        editMovies.splice(i, 1, movieObj);\r\n      } else {\r\n        editMovies.splice(0, 0, movieObj);\r\n        index++;\r\n      }\r\n      return {\r\n        ...state,\r\n        movies: editMovies,\r\n        modalError: action.error,\r\n        modalDisplay: false,\r\n        newMovieIndex: index\r\n      };\r\n    } else {\r\n      return {\r\n        ...state,\r\n        modalError: action.error\r\n      };\r\n    }\r\n  } else if (action.type === \"DELETE_MOVIE\") {\r\n    let movies = [...state.movies];\r\n    let i = state.movies.findIndex(item => item.imdbID === action.id);\r\n    movies.splice(i, 1);\r\n    return {\r\n      ...state,\r\n      movies: movies\r\n    };\r\n  } else if (action.type === \"TOGGLE_DIALOG\") {\r\n    if (!action.display) {\r\n      action.display = true;\r\n    } else {\r\n      action.display = false;\r\n    }\r\n    return {\r\n      ...state,\r\n      dialogDisplay: action.display,\r\n      modalMovieId: action.movieId\r\n    };\r\n  } else if (action.type === \"SEARCH_MOVIE\") {\r\n    return {\r\n      ...state,\r\n      movies: [],\r\n      updateMoviesSearch: true,\r\n      search: action.value\r\n    };\r\n  } else if (action.type === \"IMAGE_ERROR\") {\r\n    let movies = [...state.movies];\r\n    let i = movies.findIndex(item => item.imdbID === action.id);\r\n    movies[i].Poster = \"/noImg.png\";\r\n    return {\r\n      ...state,\r\n      movies: movies,\r\n      dialogDisplay: action.display,\r\n      modalMovieId: action.movieId\r\n    };\r\n  } else return state;\r\n};\r\n\r\nexport default projectReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport projectReducer from \"./store/reducers/projectReducer\";\nimport thunk from \"redux-thunk\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  projectReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}